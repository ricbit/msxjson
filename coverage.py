"""Simple HTML coverage report generator.

This script reads the list of executed addresses from ``coverage.txt`` and
compares it against the addresses present in ``json.lst`` (the assembly
listing generated by ``sjasmplus``).  Lines that were executed are
highlighted in green and the others in red.

The original version of this helper script was written for Python 2 and used
``print`` statements.  Running it with a modern Python interpreter results in a
``SyntaxError``.  To make the tool usable again we update it to Python 3 by
using ``print`` functions and context managers for file handling.
"""

from __future__ import annotations


def _load_addresses(path: str) -> set[int]:
    """Return a set of executed addresses read from *path*.

    Each address in ``coverage.txt`` is expected to be an integer separated by
    whitespace.  ``set`` is used so membership tests are ``O(1)`` later on.
    """

    with open(path, "r", encoding="utf-8") as handle:
        return set(map(int, handle.read().split()))


def main() -> None:
    addrs = _load_addresses("coverage.txt")

    print("<html><body><pre>")
    with open("json.lst", "r", encoding="utf-8") as listing:
        for line in listing:
            tokens = line.split()
            if tokens and int(tokens[1], 16) in addrs:
                print(
                    f'<span style="background-color: #CFC">{line.rstrip()}</span>'
                )
            else:
                print(
                    f'<span style="background-color: #FCC">{line.rstrip()}</span>'
                )
    print("</pre></body></html>")


if __name__ == "__main__":
    main()


